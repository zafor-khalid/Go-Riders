{"version":3,"sources":["Components/Body/Body.js","Components/Header/Header.js","Redux/actionTypes.js","Redux/actionCreators.js","Components/Body/Auth/Registration.js","Components/Body/Auth/Login.js","assets/bike.jpg","assets/car.webp","assets/bus.png","assets/train.png","Components/Body/Menus/Menu.js","Components/Body/Auth/Logout.js","Components/Body/Search/Search.js","Components/Routing.js","Components/Main.js","Redux/Reducer.js","Redux/Store.js","App.js","reportWebVitals.js","index.js"],"names":["Body","props","className","Header","state","collapsed","toggleNavbar","setState","link","this","idToken","Nav","navbar","NavItem","exact","to","Navbar","color","light","expand","NavbarBrand","href","style","fontSize","fontStyle","NavbarToggler","onClick","Collapse","isOpen","Component","connect","localId","dispatch","AUTH_SUCCESS","authSuccess","email","type","Actions","payload","addUser","fullname","password","info","returnSecureToken","axios","post","then","response","localStorage","setItem","data","exper","Date","getTime","expiresIn","addUserInfo","authLogout","removeItem","Registration","initialValues","name","confirmpassword","onSubmit","values","console","log","validate","error","test","errors","handleChange","handleSubmit","isSubmitting","value","onChange","placeholder","disabled","Login","logIn","Menu","CardDeck","Card","CardImg","top","width","height","src","bike","alt","CardBody","CardTitle","tag","car","bus","train","paddingBottom","Logout","ownProps","SearchLocation","address","handleSelect","geocodeByAddress","results","getLatLng","latLng","catch","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","active","backgroundColor","cursor","description","route","path","component","Search","Main","authCheck","token","getItem","userId","initialState","Store","createStore","action","applyMiddleware","thunk","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.27805f39.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Body=props=>{\r\n    return(\r\n        <div className=\"container p-5\">\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;","import React, {Component, } from 'react';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    idToken: state.idToken,\r\n    localId: state.localId,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      \r\n  }\r\n}\r\nclass Header extends Component{\r\n  state={\r\n    collapsed:true\r\n  }\r\n  componentDidMount(){\r\n    // this.props.fetchName(this.props.idToken);\r\n}\r\n    toggleNavbar=()=>{\r\n        this.setState({\r\n          collapsed:!this.state.collapsed\r\n        })\r\n    }\r\n    \r\n    render(){\r\n      let link=null;\r\n    if(this.props.idToken===null){\r\n      link=(\r\n        <Nav navbar className=\"ml-auto\">\r\n              <NavItem>\r\n              <NavLink exact to=\"/\" className=\"btn text-dark font-weight-bold\">Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n              <NavLink exact to=\"/Destination\" className=\"btn text-dark font-weight-bold\">Destination</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n              <NavLink exact to=\"/blog\" className=\"btn text-dark font-weight-bold\">Blog</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n              <NavLink exact to=\"/contact\" className=\"btn text-dark font-weight-bold\">Contact</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink exact to=\"/login\" className=\"btn btn-danger text-light font-weight-bold\">Login</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n      )\r\n    }\r\n    else{\r\n      link=<Nav navbar className=\"ml-auto\">\r\n      <NavItem>\r\n      <NavLink exact to=\"/\" className=\"btn text-dark font-weight-bold\">Home</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n      <NavLink exact to=\"/Destination\" className=\"btn text-dark font-weight-bold\">Destination</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n      <NavLink exact to=\"/blog\" className=\"btn text-dark font-weight-bold\">Blog</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n      <NavLink exact to=\"/contact\" className=\"btn text-dark font-weight-bold\">Contact</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink exact to=\"/logout\" className=\"btn btn-danger text-light font-weight-bold\">Logout</NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n    }\r\n      return(\r\n        <div className=\"container\">\r\n        <Navbar color=\"faded\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\" className=\"mr-auto h1\" style={{\r\n              fontSize:\"40px\",\r\n              fontStyle:\"bold\"\r\n          }}>Urban Riders</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n          <Collapse isOpen={!this.state.collapsed} navbar>\r\n            {link}\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Header);","export const AUTH_SUCCESS=\"AUTH_SUCCESS\"\r\nexport const AUTH_LOGOUT=\"AUTH_LOGOUT\"","import axios from 'axios'\r\nimport * as Actions from './actionTypes'\r\n\r\n\r\nexport const authSuccess=(email,idToken,localId)=>{\r\n    return{\r\n        type:Actions.AUTH_SUCCESS,\r\n        payload:{\r\n            email:email,\r\n            idToken:idToken,\r\n            localId:localId\r\n        }\r\n    }\r\n}\r\n\r\nexport const addUserInfo=(fullname,email,idToken,localId)=>{\r\n    const info={\r\n        fullname:fullname,\r\n        email:email,\r\n        idToken:idToken,\r\n        localId:localId\r\n    }\r\n    axios.post(\"https://urban-riders-97b8a-default-rtdb.firebaseio.com/User.json\",info)\r\n    .then(response=>{\r\n\r\n    })\r\n    \r\n}\r\n\r\nexport const addUser=(fullname,email,password)=>dispatch=>{\r\n    const info={\r\n        email:email,\r\n        password:password,\r\n        returnSecureToken:true\r\n    }\r\n    const API_KEY=\"AIzaSyDL_tY2nnmXVHGUtCfvlGs1Nvbjbl3iYuE\";\r\n    axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\"+API_KEY,info)\r\n    .then(response=>{\r\n        localStorage.setItem('token',response.data.idToken);\r\n        localStorage.setItem('userId',response.data.localId);\r\n        const exper=new Date(new Date().getTime() + response.data.expiresIn*1000)\r\n        localStorage.setItem('experDate',exper);\r\n        dispatch(addUserInfo(fullname,email,response.data.idToken,response.data.localId))\r\n        dispatch(authSuccess(email,response.data.idToken,response.data.localId))\r\n    })\r\n}\r\n\r\nexport const logIn=(email,password)=>dispatch=>{\r\n    const info={\r\n        email:email,\r\n        password:password,\r\n        returnSecureToken:true\r\n    }\r\n    const API_KEY=\"AIzaSyDL_tY2nnmXVHGUtCfvlGs1Nvbjbl3iYuE\";\r\n    axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\"+API_KEY,info)\r\n    .then(response=>{\r\n        localStorage.setItem('token',response.data.idToken);\r\n        localStorage.setItem('userId',response.data.localId);\r\n        const exper=new Date(new Date().getTime() + response.data.expiresIn*1000)\r\n        localStorage.setItem('experDate',exper);\r\n        dispatch(authSuccess(email,response.data.idToken,response.data.localId))\r\n    })\r\n}\r\n\r\n\r\nexport const authCheck=()=>dispatch=>{\r\n    let token=localStorage.getItem('token')\r\n    if(!token){\r\n        //logout\r\n    }\r\n    else{\r\n        let exper=localStorage.getItem('experDate')\r\n        if(exper>=new Date()){\r\n            //logout\r\n        }\r\n        else{\r\n            let userId=localStorage.getItem('userId')\r\n            dispatch(authSuccess(token,userId))\r\n        }\r\n    }\r\n}\r\n\r\nexport const authLogout=()=>{\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('experDate')\r\n    return{\r\n        type:Actions.AUTH_LOGOUT\r\n    }\r\n}\r\n","\r\nimport {Formik} from 'formik';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {addUser} from '../../../Redux/actionCreators';\r\nimport {connect } from 'react-redux'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addUser: (fullname,email,password) => {\r\n            dispatch(addUser(fullname,email,password))\r\n        }\r\n    }\r\n}\r\nclass Registration extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={\r\n                        {\r\n                            name:'',\r\n                            email:'',\r\n                            password:'',\r\n                            confirmpassword:''\r\n                        }\r\n                    }\r\n                    onSubmit={values=>{\r\n                        console.log(values)\r\n                        this.props.addUser(values.name,values.email,values.password)\r\n                    }}\r\n\r\n                    validate={values=>{\r\n                        let error={};\r\n                        if(!values.name){\r\n                            error.name=\"Required\"\r\n                        }\r\n                        if(!values.email){\r\n                            error.email=\"Required\"\r\n                        }\r\n                        else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){\r\n                            error.email=\"Invalid Email address\"\r\n                        }\r\n                        if(!values.password){\r\n                            error.password=\"Required\"\r\n                        }\r\n                        if(values.password!==values.confirmpassword){\r\n                            error.confirmpassword=\"Password not match!\"\r\n                        }\r\n                        return error;\r\n                        \r\n                    }}\r\n                >\r\n                {({values,\r\n                    errors,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting})=>(\r\n                    <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        className=\"form-control p-3 mb-3\"\r\n                        placeholder=\"Enter your name\"\r\n                    />\r\n                    <span className=\"text-danger\">{errors.name}</span>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        className=\"form-control p-3 mb-3\"\r\n                        placeholder=\"Enter your email\"\r\n                    />\r\n                    \r\n                    <span className=\"text-danger\">{errors.email}</span>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        className=\"form-control p-3 mb-3\"\r\n                        placeholder=\"Enter password\"\r\n                    />\r\n                    \r\n                    <span className=\"text-danger\">{errors.password}</span>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"confirmpassword\"\r\n                        value={values.confirmpassword}\r\n                        onChange={handleChange}\r\n                        className=\"form-control p-3 mb-3\"\r\n                        placeholder=\"Confirm password\"\r\n                    />\r\n                    \r\n                    <span className=\"text-danger\">{errors.confirmpassword}</span>\r\n                    <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-success\">\r\n                        Registration\r\n                    </button>\r\n                </form>\r\n                )}\r\n\r\n                </Formik>\r\n                <div>Already have an account?<Link exact to=\"/login\">Login</Link> here.</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(Registration);","\r\nimport {Formik} from 'formik';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect } from 'react-redux'\r\nimport {logIn} from '../../../Redux/actionCreators';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logIn: (email,password) => {\r\n            dispatch(logIn(email,password))\r\n        }\r\n        ,\r\n        \r\n    }\r\n}\r\n\r\nclass Login extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={\r\n                        {\r\n                            email:'',\r\n                            password:'',\r\n                        }\r\n                    }\r\n                    onSubmit={values=>{\r\n                        console.log(values)\r\n                        this.props.logIn(values.email,values.password)\r\n                    }}\r\n\r\n                    validate={values=>{\r\n                        let error={};\r\n                        if(!values.email){\r\n                            error.email=\"Required\"\r\n                        }\r\n                        else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){\r\n                            error.email=\"Invalid Email address\"\r\n                        }\r\n                        if(!values.password){\r\n                            error.password=\"Required\"\r\n                        }\r\n                        return error;\r\n                        \r\n                    }}\r\n                >\r\n                {({values,\r\n                    errors,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting})=>(\r\n                    <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        className=\"form-control p-3 mb-3\"\r\n                        placeholder=\"Enter your email\"\r\n                    />\r\n                    \r\n                    <span className=\"text-danger\">{errors.email}</span>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        className=\"form-control p-3 mb-3\"\r\n                        placeholder=\"Enter password\"\r\n                    />\r\n                    \r\n                    <span className=\"text-danger\">{errors.password}</span>\r\n                    \r\n                    <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-warning\">\r\n                        Login\r\n                    </button>\r\n                </form>\r\n                )}\r\n\r\n                </Formik>\r\n                <div>Don't have an account?<Link exact to=\"/registration\">Resigration</Link> here.</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(Login);","export default __webpack_public_path__ + \"static/media/bike.374ae872.jpg\";","export default __webpack_public_path__ + \"static/media/car.27bd48e5.webp\";","export default __webpack_public_path__ + \"static/media/bus.b63de976.png\";","export default __webpack_public_path__ + \"static/media/train.a88330b7.png\";","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardTitle, CardDeck, CardBody\r\n  } from 'reactstrap';\r\n\r\nimport bike from '../../../assets/bike.jpg'\r\nimport car from '../../../assets/car.webp'\r\nimport bus from '../../../assets/bus.png'\r\nimport train from '../../../assets/train.png'\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Menu.css'\r\n\r\nconst Menu=()=>{\r\n    return(\r\n        <div className=\"container\">\r\n            <CardDeck>\r\n                    <Card>\r\n                        <CardImg top width=\"150px\" height=\"200px\" src={bike} alt=\"Card image cap\" />\r\n                        <CardBody>\r\n                            <Link className=\"Link link text-decoration-none font-weight-bold\" to='/bike'><CardTitle tag=\"h5\" className=\"text-center\">Bike</CardTitle></Link>\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardImg top width=\"150px\" height=\"200px\" src={car} alt=\"Card image cap\" />\r\n                        <CardBody>\r\n                            <Link className=\"Link link text-decoration-none font-weight-bold\" to='/car'><CardTitle tag=\"h5\" className=\"text-center\">Car</CardTitle></Link>\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardImg top width=\"150px\" height=\"200px\" src={bus} alt=\"Card image cap\" />\r\n                        <CardBody>\r\n                            <Link className=\"Link link text-decoration-none font-weight-bold\" to='/bus'><CardTitle tag=\"h5\" className=\"text-center\">Bus</CardTitle></Link>\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardImg top width=\"150px\" height=\"200px\" src={train} alt=\"Card image cap\" />\r\n                        <CardBody>\r\n                            <Link className=\"Link link text-decoration-none font-weight-bold\" to='/train'><CardTitle tag=\"h5\" className=\"text-center\">Train</CardTitle></Link>\r\n                        </CardBody>\r\n                    </Card>\r\n            </CardDeck>\r\n                <div style={{width:'100%',height:'100%',paddingBottom:'400px'}}></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport {connect } from 'react-redux'\r\nimport {Redirect} from 'react-router';\r\nimport {authLogout} from '../../../Redux/actionCreators';\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        authLogout: () => {\r\n            dispatch(authLogout(authLogout()))\r\n        }\r\n    }\r\n}\r\n\r\nclass Logout extends Component{\r\n    componentDidMount(){\r\n        this.props.authLogout()\r\n    }\r\n    render(){\r\n        return(\r\n            <Redirect to=\"/\" />\r\n        )\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n  } from 'react-places-autocomplete';\r\n\r\nclass SearchLocation extends Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = { address: '' };\r\n  }\r\n \r\n  handleChange = address => {\r\n    this.setState({ address });\r\n  };\r\n \r\n  handleSelect = address => {\r\n    geocodeByAddress(address)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => console.log('Success', latLng))\r\n      .catch(error => console.error('Error', error));\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <PlacesAutocomplete\r\n        value={this.state.address}\r\n        onChange={this.handleChange}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <input\r\n              {...getInputProps({\r\n                placeholder: 'Search Places ...',\r\n                className: 'location-search-input',\r\n              })}\r\n            />\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              {loading && <div>Loading...</div>}\r\n              {suggestions.map(suggestion => {\r\n                const className = suggestion.active\r\n                  ? 'suggestion-item--active'\r\n                  : 'suggestion-item';\r\n                // inline style for demonstration purpose\r\n                const style = suggestion.active\r\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                return (\r\n                  <div\r\n                    {...getSuggestionItemProps(suggestion, {\r\n                      className,\r\n                      style,\r\n                    })}\r\n                  >\r\n                    <span>{suggestion.description}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    );\r\n  }\r\n}\r\nexport default SearchLocation;","import React from 'react';\r\nimport { Redirect, Route,Switch} from 'react-router-dom';\r\nimport Registration from './Body/Auth/Registration';\r\nimport Login from './Body/Auth/Login'\r\nimport Menu from './Body/Menus/Menu';\r\n\r\nimport {connect} from 'react-redux'\r\nimport Logout from './Body/Auth/Logout';\r\nimport Search from './Body/Search/Search';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    idToken: state.idToken\r\n  }\r\n}\r\n\r\n\r\nconst Routing = props=>{\r\n    let route=null;\r\n    if(props.idToken){\r\n\r\n        route=\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Menu}/>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n            <Route path=\"/bike\" component={Search}/>\r\n            <Route path=\"/car\" component={Search}/>\r\n            <Route path=\"/bus\" component={Search}/>\r\n            <Route path=\"/train\" component={Search}/>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    }\r\n    else{\r\n        route=\r\n        <Switch>\r\n        <Route path=\"/\" exact component={Menu}/>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/registration\" component={Registration}/>\r\n        <Redirect to=\"/login\" />\r\n        </Switch>\r\n    }\r\n    return(\r\n          <div>\r\n          {route}\r\n          </div>\r\n    )\r\n}\r\nexport default connect(mapStateToProps)(Routing);","import React, { Component } from 'react';\r\nimport Body from './Body/Body';\r\nimport Header from './Header/Header';\r\nimport Routing from './Routing';\r\nimport {connect} from 'react-redux'\r\nimport {authCheck} from '../Redux/actionCreators';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        localId: state.localId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        authCheck: () => {\r\n            dispatch(authCheck())\r\n        }\r\n    }\r\n}\r\n\r\nclass Main extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.authCheck()\r\n    }\r\n   \r\n    render(){\r\n       \r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <Body/>\r\n                <Routing/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Main);","import * as Actions from './actionTypes'\r\nconst initialState={\r\n    email:'',\r\n    idToken:null,\r\n    localId:null,\r\n}\r\n\r\nexport const Reducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case Actions.AUTH_SUCCESS:\r\n            return{\r\n                ...state,\r\n                idToken:action.payload.idToken,\r\n                localId:action.payload.localId,\r\n                email:action.payload.email,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {Reducer} from \"./Reducer\";\r\n\r\nexport const Store=createStore(Reducer,applyMiddleware(thunk))","import {Provider} from 'react-redux';\nimport './App.css';\nimport Main from './Components/Main';\nimport {Store} from './Redux/Store';\nimport {BrowserRouter} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Provider store={Store}>\n      <BrowserRouter>\n        <div className=\"app\">\n          <Main/>\n        </div>\n      </BrowserRouter>\n    </Provider> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}